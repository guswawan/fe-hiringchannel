{"ast":null,"code":"import { Component } from 'react';\nimport { array, func, bool, string, number } from 'prop-types';\nimport matchSorter from 'match-sorter';\nimport sortBy from 'lodash.sortby';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar calculatePages = function (items, itemsPerPage) {\n  return Math.ceil(items / itemsPerPage);\n};\n\nvar sortData = function (data, key, direction) {\n  if (direction === void 0) {\n    direction = 'asc';\n  }\n\n  var sorted = sortBy(data, key);\n  return direction === 'desc' ? sorted.reverse() : sorted;\n};\n\nvar paginateData = function (data, activePage, itemsPerPage) {\n  var from = activePage * itemsPerPage;\n  var to = from + itemsPerPage;\n  return data.slice(from, to);\n};\n\nvar DataSort =\n/** @class */\nfunction (_super) {\n  __extends(DataSort, _super);\n\n  function DataSort() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      sortBy: _this.props.defaultSortBy || null,\n      direction: _this.props.defaultDirection || 'asc',\n      pages: null,\n      activePage: _this.props.defaultActivePage || 0,\n      data: [],\n      searchQuery: ''\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        sortBy: null,\n        direction: 'asc',\n        activePage: 0\n      });\n    };\n\n    _this.prevPage = function () {\n      if (_this.props.paginate === null) {\n        return;\n      }\n\n      var activePage = (_this.isPaginationControlled() ? _this.props : _this.state).activePage;\n\n      if (activePage === 0) {\n        return;\n      }\n\n      _this.goToPage(activePage - 1);\n    };\n\n    _this.nextPage = function () {\n      if (_this.props.paginate === null) {\n        return;\n      }\n\n      var activePage = (_this.isPaginationControlled() ? _this.props : _this.state).activePage;\n      var pages = _this.state.pages;\n\n      if (activePage + 1 < pages) {\n        _this.goToPage(activePage + 1);\n      }\n    };\n\n    _this.goToPage = function (activePage) {\n      if (_this.props.paginate === null) {\n        return;\n      }\n\n      if (typeof activePage !== 'number' || activePage < 0 || activePage > _this.state.pages) {\n        return;\n      }\n\n      _this.setState({\n        activePage: activePage\n      });\n    };\n\n    _this.setSortBy = function (sortBy) {\n      _this.setState({\n        sortBy: sortBy\n      });\n    };\n\n    _this.setDirection = function (direction) {\n      if (direction === 'asc' || direction === 'desc') {\n        _this.setState({\n          direction: direction\n        });\n      }\n    };\n\n    _this.toggleDirection = function () {\n      _this.setState({\n        direction: _this.state.direction === 'asc' ? 'desc' : 'asc'\n      });\n    };\n    /**\r\n     * Search dataset with given query\r\n     *\r\n     * @param value: string\r\n     */\n\n\n    _this.search = function (value) {\n      _this.setState({\n        searchQuery: value\n      });\n    };\n\n    return _this;\n  }\n\n  DataSort.prototype.componentDidMount = function () {\n    var _a = this.props,\n        itemsPerPage = _a.itemsPerPage,\n        paginate = _a.paginate,\n        data = _a.data;\n\n    if (paginate) {\n      this.setState({\n        pages: calculatePages(data.length, itemsPerPage)\n      });\n    }\n  };\n\n  DataSort.prototype.isPaginationControlled = function () {\n    return typeof this.props.activePage !== 'undefined';\n  };\n\n  DataSort.prototype.isSortByControlled = function () {\n    return typeof this.props.sortBy !== 'undefined';\n  };\n\n  DataSort.prototype.isDirectionControlled = function () {\n    return typeof this.props.direction !== 'undefined';\n  };\n\n  DataSort.prototype.isSearchControlled = function () {\n    return typeof this.props.searchQuery !== 'undefined';\n  };\n\n  DataSort.prototype.render = function () {\n    var _a = this.props,\n        render = _a.render,\n        paginate = _a.paginate,\n        itemsPerPage = _a.itemsPerPage,\n        data = _a.data;\n    var activePage = (this.isPaginationControlled() ? this.props : this.state).activePage;\n    var sortBy = (this.isSortByControlled() ? this.props : this.state).sortBy;\n    var direction = (this.isDirectionControlled() ? this.props : this.state).direction;\n    var searchQuery = (this.isSearchControlled() ? this.props : this.state).searchQuery;\n    var pages = this.state.pages;\n    var keys = this.props.searchInKeys ? this.props.searchInKeys : Object.keys(data[0]); // Search & sort data\n\n    var searched = searchQuery === '' ? data : matchSorter(data, searchQuery, {\n      keys: keys\n    });\n    var sorted = sortBy === null ? searched : sortData(searched, sortBy, direction);\n    return typeof render !== 'function' ? null : render({\n      data: paginate ? paginateData(sorted, activePage, itemsPerPage) : sorted,\n      activePage: activePage,\n      pages: pages,\n      sortBy: sortBy,\n      direction: direction,\n      searchQuery: searchQuery,\n      toggleDirection: this.toggleDirection,\n      reset: this.reset,\n      prevPage: this.prevPage,\n      nextPage: this.nextPage,\n      goToPage: this.goToPage,\n      setDirection: this.setDirection,\n      setSortBy: this.setSortBy,\n      search: this.search\n    });\n  };\n\n  DataSort.propTypes = {\n    data: array.isRequired,\n    render: func,\n    paginate: bool,\n    sortBy: string,\n    direction: string,\n    itemsPerPage: number,\n    activePage: number,\n    defaultSortBy: string,\n    defaultDirection: string,\n    searchQuery: string,\n    searchInKeys: array\n  };\n  DataSort.defaultProps = {\n    itemsPerPage: 10,\n    paginate: false\n  };\n  return DataSort;\n}(Component);\n\nexport default DataSort;","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { Component } from 'react';\nimport { array, func, bool, string, number } from 'prop-types';\nimport matchSorter from 'match-sorter';\nimport sortBy from 'lodash.sortby';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar calculatePages = function (items, itemsPerPage) {\r\n    return Math.ceil(items / itemsPerPage);\r\n};\r\nvar sortData = function (data, key, direction) {\r\n    if (direction === void 0) { direction = 'asc'; }\r\n    var sorted = sortBy(data, key);\r\n    return direction === 'desc' ? sorted.reverse() : sorted;\r\n};\r\nvar paginateData = function (data, activePage, itemsPerPage) {\r\n    var from = activePage * itemsPerPage;\r\n    var to = from + itemsPerPage;\r\n    return data.slice(from, to);\r\n};\n\nvar DataSort = /** @class */ (function (_super) {\r\n    __extends(DataSort, _super);\r\n    function DataSort() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            sortBy: _this.props.defaultSortBy || null,\r\n            direction: _this.props.defaultDirection || 'asc',\r\n            pages: null,\r\n            activePage: _this.props.defaultActivePage || 0,\r\n            data: [],\r\n            searchQuery: ''\r\n        };\r\n        _this.reset = function () {\r\n            _this.setState({\r\n                sortBy: null,\r\n                direction: 'asc',\r\n                activePage: 0\r\n            });\r\n        };\r\n        _this.prevPage = function () {\r\n            if (_this.props.paginate === null) {\r\n                return;\r\n            }\r\n            var activePage = (_this.isPaginationControlled() ? _this.props : _this.state).activePage;\r\n            if (activePage === 0) {\r\n                return;\r\n            }\r\n            _this.goToPage(activePage - 1);\r\n        };\r\n        _this.nextPage = function () {\r\n            if (_this.props.paginate === null) {\r\n                return;\r\n            }\r\n            var activePage = (_this.isPaginationControlled() ? _this.props : _this.state).activePage;\r\n            var pages = _this.state.pages;\r\n            if (activePage + 1 < pages) {\r\n                _this.goToPage(activePage + 1);\r\n            }\r\n        };\r\n        _this.goToPage = function (activePage) {\r\n            if (_this.props.paginate === null) {\r\n                return;\r\n            }\r\n            if (typeof activePage !== 'number' || activePage < 0 || activePage > _this.state.pages) {\r\n                return;\r\n            }\r\n            _this.setState({ activePage: activePage });\r\n        };\r\n        _this.setSortBy = function (sortBy) {\r\n            _this.setState({ sortBy: sortBy });\r\n        };\r\n        _this.setDirection = function (direction) {\r\n            if (direction === 'asc' || direction === 'desc') {\r\n                _this.setState({ direction: direction });\r\n            }\r\n        };\r\n        _this.toggleDirection = function () {\r\n            _this.setState({\r\n                direction: _this.state.direction === 'asc' ? 'desc' : 'asc'\r\n            });\r\n        };\r\n        /**\r\n         * Search dataset with given query\r\n         *\r\n         * @param value: string\r\n         */\r\n        _this.search = function (value) {\r\n            _this.setState({ searchQuery: value });\r\n        };\r\n        return _this;\r\n    }\r\n    DataSort.prototype.componentDidMount = function () {\r\n        var _a = this.props, itemsPerPage = _a.itemsPerPage, paginate = _a.paginate, data = _a.data;\r\n        if (paginate) {\r\n            this.setState({ pages: calculatePages(data.length, itemsPerPage) });\r\n        }\r\n    };\r\n    DataSort.prototype.isPaginationControlled = function () {\r\n        return typeof this.props.activePage !== 'undefined';\r\n    };\r\n    DataSort.prototype.isSortByControlled = function () {\r\n        return typeof this.props.sortBy !== 'undefined';\r\n    };\r\n    DataSort.prototype.isDirectionControlled = function () {\r\n        return typeof this.props.direction !== 'undefined';\r\n    };\r\n    DataSort.prototype.isSearchControlled = function () {\r\n        return typeof this.props.searchQuery !== 'undefined';\r\n    };\r\n    DataSort.prototype.render = function () {\r\n        var _a = this.props, render = _a.render, paginate = _a.paginate, itemsPerPage = _a.itemsPerPage, data = _a.data;\r\n        var activePage = (this.isPaginationControlled() ? this.props : this.state).activePage;\r\n        var sortBy = (this.isSortByControlled() ? this.props : this.state).sortBy;\r\n        var direction = (this.isDirectionControlled() ? this.props : this.state).direction;\r\n        var searchQuery = (this.isSearchControlled() ? this.props : this.state).searchQuery;\r\n        var pages = this.state.pages;\r\n        var keys = this.props.searchInKeys ? this.props.searchInKeys : Object.keys(data[0]);\r\n        // Search & sort data\r\n        var searched = searchQuery === '' ? data : matchSorter(data, searchQuery, { keys: keys });\r\n        var sorted = sortBy === null ? searched : sortData(searched, sortBy, direction);\r\n        return typeof render !== 'function'\r\n            ? null\r\n            : render({\r\n                data: paginate ? paginateData(sorted, activePage, itemsPerPage) : sorted,\r\n                activePage: activePage,\r\n                pages: pages,\r\n                sortBy: sortBy,\r\n                direction: direction,\r\n                searchQuery: searchQuery,\r\n                toggleDirection: this.toggleDirection,\r\n                reset: this.reset,\r\n                prevPage: this.prevPage,\r\n                nextPage: this.nextPage,\r\n                goToPage: this.goToPage,\r\n                setDirection: this.setDirection,\r\n                setSortBy: this.setSortBy,\r\n                search: this.search\r\n            });\r\n    };\r\n    DataSort.propTypes = {\r\n        data: array.isRequired,\r\n        render: func,\r\n        paginate: bool,\r\n        sortBy: string,\r\n        direction: string,\r\n        itemsPerPage: number,\r\n        activePage: number,\r\n        defaultSortBy: string,\r\n        defaultDirection: string,\r\n        searchQuery: string,\r\n        searchInKeys: array\r\n    };\r\n    DataSort.defaultProps = {\r\n        itemsPerPage: 10,\r\n        paginate: false\r\n    };\r\n    return DataSort;\r\n}(Component));\n\nexport default DataSort;\n//# sourceMappingURL=react-data-sort.esm.js.map\n"]},"metadata":{},"sourceType":"module"}